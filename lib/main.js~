/*
This add-on will try to communicate with the Django Server created by me.
*/

//Mozilla sdk modules:
var data = require("sdk/self").data;		
var Request = require("sdk/request").Request;
var openTabs = require("sdk/tabs");
var windows = require("sdk/windows").browserWindows;

//Variables
var connectTo = 'http://localhost:8080/';	//Django server's URL
var tabsList = new Array();			//A list of all tabs.



/*Open some tabs automatically, to avoid doing it manually.*/
openTabs.activeTab.url = "http://www.gmail.com";
openTabs.open("http://www.google.com");
openTabs.open("http://www.urjc.es");


/**************Panel settings*************/
var myPanel = require("sdk/panel").Panel({
  width: 800,
  height: 500,
  contentScriptFile: data.url('send-django.js'),
  contentURL: "about:blank",
  contentScriptWhen: 'ready',
  onHide: function () {
    /*On hide clear everything to go back to the main menu on show*/
    myPanel.contentURL = "about:blank";
  }
});

/**************Widget settings*************/
var myWidget = require("sdk/widget").Widget({
  id: "myWidget",
  label: "Django test",
  width:60,
  content: "Django!",
  panel: myPanel,
  //contentScriptWhen: 'ready',
  onClick: onClickWidget
});


function onClickWidget(){
    /*On click show the panel with the html content with the tab's list*/
    myPanel.contentURL = data.url('myPage.html');
    myPanel.port.emit('start','start');
    /*myPanel.port.on('ready',function(msg){
    	console.log("READY!");
    
    });*/

}

myPanel.port.on('tabsClicked',function(message){
	//The content-script lets know the add-on that the user has clicked the list button.
	//So call ths function listTabs
	tabsList = listTabs();
});



myPanel.port.on('sendClicked',function(messageToSend){
	/* Content-script lets know the add-on
	 * that the user has clicked the list & send button.
	 * This is to send the tabs' information to the server.*/
	console.log("SEND CLICKED!!!!");
	tabsList = listTabs();	//First get the open tabs' information.
	for each(var tab in tabsList){
		var URL = connectTo;
		// Create the correct URL to save the tab's info:
		URL = URL + 'save/' + tab.title + '|' + tab.url ;
		var sendMessage = Request({
		    url: URL,
		    contentType: 'text/html; charset=utf-8',
		    onComplete: function (response) {
    			var answer = response.text;
    			//Send the server's response to the content-script to handle it.
    			myPanel.port.emit('response',response.text);	
 		    }
 		});
		sendMessage.put();	//Put the message on the server.
	}
});


function listTabs() {
	var listOfTabs = new Array();
	var tabs = require("sdk/tabs");
	myPanel.port.emit('reset','reset');
	//Clean the database in DJango server
	var URL = connectTo;
	URL = URL + 'clear/all';
	var sendMessage = Request({
		url: URL,
		contentType: 'text/html; charset=utf-8',
		onComplete: function (response) {
    			var answer = response.text;
 		}
 	});
	sendMessage.put();
	var numberOfTabs = tabs.length;
	var countTabs = 0;
	console.log("Number of tabs = " + numberOfTabs);
	//For each tab handle the tab's info:
	for each (var tab in tabs){
		var tabInfo = new Array();
		//console.log(tab.url);
		tabInfo[0] = tab.url;	//the tabs url
		tabInfo[1] = tab.title;	// the tab's title
		tabInfo[2] = tab.id;	//unique id for this tab
		//listOfTabs[counter] = tab;
		//Create object with all the info which is serialazable JSON
		var info = new Object();
		info.id = tab.id;
		info.title = tab.title;
		info.url = tab.url;		
		listOfTabs.push(info);
		//counter++;
		//JSON.stringify(tabInfo);		//Convert the array to JSON format because the port only can send serialazable JASON messages.
		//A tab's worker, used to get information and work on the tab.
		worker = tab.attach({
    			contentScriptFile: data.url("tab-access.js")
   		});
   		// Ask the worker's content-script for tab's cookies 
    		worker.port.emit('giveCookies',tab.id);
    		worker.port.on('takeCookies',function(cookiesInfo){
    			countTabs++;
    			//console.log("Count tabs " + countTabs);
    			var thisTabsId = cookiesInfo.pop();
    			//console.log("TABS ID = " + thisTabsId);
    			//Lets search for the tab with thisTabsId in the listOfTabs.
    			var pos = listOfTabs.map(function(e) { 
    				return e.id; 
    			}).indexOf(thisTabsId);
    			
    			//Once we have got the position of the tab with the id, lets save its cookies:
    			listOfTabs[pos].cookies = cookiesInfo;
    			 
    			//console.log("Position of " + listOfTabs[pos].title + " = " + pos );
    			/*for each (var savedInfo in listOfTabs){
    				var savedId = savedInfo.id;
    				if (savedId.match())
    			
    			
    			}
			/*for each (var cookie in cookiesInfo){
				//console.log(title + "  " + cookie);	
			}*/
			
			/*If we have saved information of all the tabs then send the information to the content-script*/
			if(countTabs == numberOfTabs){
				console.log("All cookies " + countTabs);
				myPanel.port.emit('takeTabs',listOfTabs);
			}
		}); 
		
		/*while(!){
			myPanel.port.emit('takeTabs',tabInfo);
		}*/
	}
	return listOfTabs;
}

 





 
